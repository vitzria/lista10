#include <stdio.h>
#include <stdlib.h>
#include <math.h>
/*****
Faça um programa que:
○ Peça para o usuário entrar com o nome e a posição (coordenadas X e Y) de N cidades e as
armazene em um vetor de estruturas (N é informado pelo usuário);
○ Crie uma matriz de distâncias entre cidades de tamanho N x N;
○ Calcule as distância entre cada duas cidades e armazene na matriz;
○ Exiba na tela a matriz de distâncias obtida;
○ Quando o usuário digitar o número de duas cidades o programa deverá retornar a
distância entre elas.
****/
struct cidade{
char nome[50];
float x;
float y;
};
int main()
{
    int n, i, j;
    float **diferenca;
    printf("Digite a quant. de cidades: ");
    scanf("%d" , &n);
    struct cidade c[n];
    for(i=0;i<n;i++){
        printf("\nCIDADE %d\n" , i+1);
        printf("\nDigite o nome da cidade: ");
        scanf("%s" , &c[i].nome);
        printf("\nDigite a coodernada x: ");
        scanf("%f" , &c[i].x);
        printf("\nDigite a coodernada y: ");
        scanf("%f" , &c[i].y);
    }
    if(n>=2){
    diferenca=(int**)calloc(n,sizeof(int*));
        if(diferenca==NULL){
        printf("\nMemoria insuficiente");
        exit(1);
        }
    for(i=0;i<n;i++){
    diferenca[i]=(int*)calloc(n,sizeof(int));
    if(diferenca[i]==NULL){
    printf("\nMemoria insuficiente");
    exit(1);
    }
        for(j=0;j<n;j++){
            diferenca[i][j]=sqrt(pow((c[i].x-c[j].x),2)-pow((c[i].y-c[j].y),2));
        }
    }
    printf("\nDIFERENCA\n");
        for(i=0;i<n;i++){
            for(j=0;j<n;j++){
            printf("\t%f" , diferenca[i][j]);
            }
        }
    }
    else{
        printf("\nNao eh possivel calcular a distancia");
        exit(1);
    }
    return 0;
}
